@using System.Globalization
@using Pages

@inject TokenProvider TokenProvider
@inject IStringLocalizer<CultureExample> Loc

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <NotAuthorized>
                    <PageTitle>@Loc["unauthorized"]</PageTitle>
                    @Loc["notAuthorized"]
                </NotAuthorized>
                <Authorizing>
                    @Loc["authorizingInProgress"]
                </Authorizing>
            </AuthorizeRouteView>
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <PageTitle>@Loc["notFound"]</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <p role="alert">@Loc["nothingAtThisAdress"]</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>
@code {
    [Parameter]
    public InitialApplicationState? InitialState { get; set; }

    protected override Task OnInitializedAsync()
    {
        TokenProvider.AccessToken = InitialState!.AccessToken;
        TokenProvider.RefreshToken = InitialState!.RefreshToken;
        TokenProvider.IdToken = InitialState!.IdToken;
        TokenProvider.IsAuthenticated = InitialState!.IsAuthenticated;

        return base.OnInitializedAsync();
    }
}
