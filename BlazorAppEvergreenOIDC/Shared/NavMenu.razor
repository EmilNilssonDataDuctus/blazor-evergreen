@inject AuthenticationStateProvider AuthenticationStateProvider
@using System.Globalization
@using Pages

@inject IConfiguration Configuration;
@inject IStringLocalizer<CultureExample> Loc

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">
            <img src="logo_region-vastmanland_2x.png" alt="Region Västmanland Logo" width="180" />
        </a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>
<div class="navbar nav-item px-3">
<CultureSelector />
</div>
<div class="@NavMenuCssClass nav-scrollable " @onclick="ToggleNavMenu">
    <nav class="flex-column nav-custom-class">
        <div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/my-page" Match="NavLinkMatch.All">
                    <span class="oi oi-list-rich" aria-hidden="true"></span>@Loc["myPage"]
                </NavLink>
            </div>
            <AuthorizeView Roles="@Configuration["OpenIDConnect:AdminRoleValue"]">
                <ChildContent>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="all-users" Match="NavLinkMatch.All">
                            <span class="oi oi-list-rich" aria-hidden="true"></span>@Loc["allUsers"]
                        </NavLink>
                    </div>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="all-devices" Match="NavLinkMatch.All">
                            <span class="oi oi-list-rich" aria-hidden="true"></span>@Loc["allDevices"]
                        </NavLink>
                    </div>
                </ChildContent>
            </AuthorizeView>
        </div>

        <div>
            <div class="nav-link">
                @if (IsAuthenticated)
                {
                    <MudButton Href="/logout"
                               Variant="Variant.Filled"
                               Color="Color.Warning"
                               Style="width: 100%;">
                        @Loc["logout"]
                    </MudButton>
                }
                else
                {
                    <MudButton Href="/login"
                               Variant="Variant.Filled"
                               Color="Color.Primary"
                               Style="width: 100%;">
                        @Loc["login"]
                    </MudButton>
                }
            </div>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private bool IsAuthenticated => GetAuthenticationState().User.Identity.IsAuthenticated;
    private AuthenticationState GetAuthenticationState()
    {
        return AuthenticationStateProvider.GetAuthenticationStateAsync().Result;
    }
}
